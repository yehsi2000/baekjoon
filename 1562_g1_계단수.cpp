//https://www.acmicpc.net/source/2899179
#include <iostream>

using namespace std;
//n자리-마지막수-포함하는수
int D[101][10][4]; // 0 -> 0이나 9에 들른적이 없는 수, 1-> 0에 들른 수, 2-> 9에 들른 수, 3-> 0,9 둘다 들른 수
//0,9둘다 들르면 계단수라 나머지 중간 수도 다 들른것
const int mod = 1000000000;

int main(){

	int n;
	cin>>n;

	for(int i = 1 ; i < 10 ; i++){ //한자리 0은 안됨
		if(i == 9) D[1][i][2] = 1; 
		else D[1][i][0] = 1;
	}
	for(int i = 2 ; i <= n ; i++){
		for(int j = 0 ; j < 10 ; j++){
			if(j == 0){
        //i자리 끝자리 0인 0,9둘다 들른 숫자 = i-1자리 끝자리 1인 9들럿거나 0,9모두 들른숫자
				D[i][j][3] = (D[i][j][3] + D[i-1][j+1][2] + D[i-1][j+1][3])%mod;
        //i자리 끝자리 0인 0만 들른 숫자 = i-1자리 끝자리 1인 0들렀거나 아예 안들른자
				D[i][j][1] = (D[i][j][1] + D[i-1][j+1][0] + D[i-1][j+1][1])%mod;
			}
			else if(j == 9){
        //i자리 끝자리 9인 0,9 둘다 들른 숫자 = i-1자리 끝자리 8인 0에 들렀거나 0,9둘다 들른 숫자
				D[i][j][3] = (D[i][j][3] + D[i-1][j-1][1] + D[i-1][j-1][3])%mod;
        //i자리 끝자리 9인 9만 들른 숫자 = i-1자리 끝자리 8인 아예 안들렀거나 9만 들른 숫자
				D[i][j][2] = (D[i][j][2] + D[i-1][j-1][0] + D[i-1][j-1][2])%mod;
			}
			else{
				for(int k = 0 ; k < 4 ; k++){
          //i자리 끝자리 0,9가 아닌 숫자 = i-1자리 끝자리 j+-1인 숫자 0,9아니라 들른건 변화없음
					D[i][j][k] = (D[i-1][j-1][k] + D[i-1][j+1][k])%mod;
				}
			}
		}
	}

	int ans = 0;
	for(int i = 0 ; i < 10 ; i++){
		ans = (ans + D[n][i][3])%mod;
	}

	cout<<ans;

	return 0;
}